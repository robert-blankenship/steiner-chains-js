// Generated by CoffeeScript 1.10.0
(function() {
  var canvas, context, drawFractal, rotateAroundPoint;

  console.log('hello world');

  canvas = document.getElementById('canvas');

  canvas.width = 400;

  canvas.height = 400;

  context = canvas.getContext('2d');

  rotateAroundPoint = function(x1, y1, radians) {
    context.translate(x1, y1);
    context.rotate(radians);
    return context.translate(-x1, -y1);
  };

  drawFractal = function(parentCircleRadius, context, fractalArray) {
    var angleEnd, angleStart, circle, i, numberOfCircles, r, ref, results;
    numberOfCircles = fractalArray[0];
    r = parentCircleRadius * Math.sin(Math.PI / numberOfCircles) / (1 + Math.sin(Math.PI / numberOfCircles));
    angleStart = 0;
    angleEnd = 2 * Math.PI;
    results = [];
    for (circle = i = 1, ref = numberOfCircles; 1 <= ref ? i <= ref : i >= ref; circle = 1 <= ref ? ++i : --i) {
      rotateAroundPoint(parentCircleRadius, context.canvas.height / 2, 2 * Math.PI / numberOfCircles);
      context.beginPath();
      context.arc(r, context.canvas.height / 2, r, angleStart, angleEnd);
      context.stroke();
      if (fractalArray.length > 1) {
        results.push(drawFractal(r, context, fractalArray.slice(1)));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  angular.module('Application', ['ngMaterial']).controller('FractalController', function($scope) {
    $scope.fractalOptions = {};
    $scope.fractalOptions.levels = [3, 3];
    $scope.fractalOptions.levelsCount = 2;
    $scope.setLevels = function(levelsCount) {
      var results;
      while ($scope.fractalOptions.levels.length > levelsCount) {
        $scope.fractalOptions.levels.pop();
      }
      results = [];
      while ($scope.fractalOptions.levels.length < levelsCount) {
        results.push($scope.fractalOptions.levels.push(3));
      }
      return results;
    };
    $scope.drawImage = function() {
      console.log($scope.fractalOptions.levels);
      context.clearRect(0, 0, canvas.width, canvas.height);
      return drawFractal(canvas.width / 2, context, $scope.fractalOptions.levels);
    };
    return $scope.drawImage();
  });

}).call(this);
